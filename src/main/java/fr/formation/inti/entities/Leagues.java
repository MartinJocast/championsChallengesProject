package fr.formation.inti.entities;
// Generated 5 sept. 2019 14:30:50 by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Leagues generated by hbm2java
 */
@Entity
@Table(name = "leagues", catalog = "championschallengeproject")
public class Leagues implements java.io.Serializable {

	private int idLeague;
	private String name;
	private int ranking;
	private Set<ResultsUsers> resultsUserses = new HashSet<ResultsUsers>(0);
	private Set<LeaguesHaveUsers> leaguesHaveUserses = new HashSet<LeaguesHaveUsers>(0);

	public Leagues() {
	}

	public Leagues(int idLeague, String name, int ranking) {
		this.idLeague = idLeague;
		this.name = name;
		this.ranking = ranking;
	}

	public Leagues(int idLeague, String name, int ranking, Set<ResultsUsers> resultsUserses,
			Set<LeaguesHaveUsers> leaguesHaveUserses) {
		this.idLeague = idLeague;
		this.name = name;
		this.ranking = ranking;
		this.resultsUserses = resultsUserses;
		this.leaguesHaveUserses = leaguesHaveUserses;
	}

	@Id

	@Column(name = "id_league", unique = true, nullable = false)
	public int getIdLeague() {
		return this.idLeague;
	}

	public void setIdLeague(int idLeague) {
		this.idLeague = idLeague;
	}

	@Column(name = "name", nullable = false, length = 30)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "ranking", nullable = false)
	public int getRanking() {
		return this.ranking;
	}

	public void setRanking(int ranking) {
		this.ranking = ranking;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "leagues")
	public Set<ResultsUsers> getResultsUserses() {
		return this.resultsUserses;
	}

	public void setResultsUserses(Set<ResultsUsers> resultsUserses) {
		this.resultsUserses = resultsUserses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "leagues")
	public Set<LeaguesHaveUsers> getLeaguesHaveUserses() {
		return this.leaguesHaveUserses;
	}

	public void setLeaguesHaveUserses(Set<LeaguesHaveUsers> leaguesHaveUserses) {
		this.leaguesHaveUserses = leaguesHaveUserses;
	}

}
