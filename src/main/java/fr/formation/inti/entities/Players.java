package fr.formation.inti.entities;
// Generated 5 sept. 2019 14:30:50 by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Players generated by hbm2java
 */
@Entity
@Table(name = "players", catalog = "championschallengeproject")
public class Players implements java.io.Serializable {

	private Integer idPlayer;
	private Clubs clubs;
	private String lastName;
	private String firstName;
	private String position;
	private String positionCode;
	private String countryCode;
	private String club;
	private int value;
	private Set<StatsPlayers> statsPlayerses = new HashSet<StatsPlayers>(0);
	private Set<TeamsHavePlayers> teamsHavePlayerses = new HashSet<TeamsHavePlayers>(0);

	public Players() {
	}

	public Players(Clubs clubs, String lastName, String position, String positionCode, String countryCode, String club,
			int value) {
		this.clubs = clubs;
		this.lastName = lastName;
		this.position = position;
		this.positionCode = positionCode;
		this.countryCode = countryCode;
		this.club = club;
		this.value = value;
	}

	public Players(Clubs clubs, String lastName, String firstName, String position, String positionCode,
			String countryCode, String club, int value, Set<StatsPlayers> statsPlayerses,
			Set<TeamsHavePlayers> teamsHavePlayerses) {
		this.clubs = clubs;
		this.lastName = lastName;
		this.firstName = firstName;
		this.position = position;
		this.positionCode = positionCode;
		this.countryCode = countryCode;
		this.club = club;
		this.value = value;
		this.statsPlayerses = statsPlayerses;
		this.teamsHavePlayerses = teamsHavePlayerses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_player", unique = true, nullable = false)
	public Integer getIdPlayer() {
		return this.idPlayer;
	}

	public void setIdPlayer(Integer idPlayer) {
		this.idPlayer = idPlayer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_club", nullable = false)
	public Clubs getClubs() {
		return this.clubs;
	}

	public void setClubs(Clubs clubs) {
		this.clubs = clubs;
	}

	@Column(name = "last_name", nullable = false, length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "first_name", length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "position", nullable = false, length = 10)
	public String getPosition() {
		return this.position;
	}

	public void setPosition(String position) {
		this.position = position;
	}

	@Column(name = "position_code", nullable = false, length = 3)
	public String getPositionCode() {
		return this.positionCode;
	}

	public void setPositionCode(String positionCode) {
		this.positionCode = positionCode;
	}

	@Column(name = "country_code", nullable = false, length = 3)
	public String getCountryCode() {
		return this.countryCode;
	}

	public void setCountryCode(String countryCode) {
		this.countryCode = countryCode;
	}

	@Column(name = "club", nullable = false, length = 20)
	public String getClub() {
		return this.club;
	}

	public void setClub(String club) {
		this.club = club;
	}

	@Column(name = "value", nullable = false)
	public int getValue() {
		return this.value;
	}

	public void setValue(int value) {
		this.value = value;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "players")
	public Set<StatsPlayers> getStatsPlayerses() {
		return this.statsPlayerses;
	}

	public void setStatsPlayerses(Set<StatsPlayers> statsPlayerses) {
		this.statsPlayerses = statsPlayerses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "players")
	public Set<TeamsHavePlayers> getTeamsHavePlayerses() {
		return this.teamsHavePlayerses;
	}

	public void setTeamsHavePlayerses(Set<TeamsHavePlayers> teamsHavePlayerses) {
		this.teamsHavePlayerses = teamsHavePlayerses;
	}

}
